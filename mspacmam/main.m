%%% This is the executable script used to run the MSPACMAM program. %%%

clear all;
addpath(genpath('helpers'));

% Read constants into structure array
constants = load_constants();
% Read config file into structure array
config = read_config_file(constants);

% Read grid file into structure array
model_grid = load_model_grid();
% Read ocean variables into structure array
ocean_data = load_ocean_data();

% Create new folder under /mspacmam/output for output files generated by model
expname = strjoin(strsplit(config.exp_name,{' ','-'},'CollapseDelimiters',true),'_');
outdirpath = fullfile('../output',expname);
if isfolder(outdirpath)
    % Throw error if output directory already exists
    error('Output directory named %s already exists. \nRename existing directory under /mspacmam/output or variable exp_name in config file.',expname);
else
   % Create output directory for model experiment
   mkdir(outdirpath);
end
% Copy config file to output directory
copyfile('config.m',fullfile(outdirpath,['config_' expname '.m']));

% Specify output file paths
tempoutfile_path = fullfile(outdirpath,['model_output_' expname '.mat']);
outfile_path = fullfile(outdirpath,['model_output_' expname '.nc']);

% Define horizontal grid points at which to run model
if config.my_coords
    lat_lon_coords = load_user_gridpoints();
    if isempty(lat_lon_coords)
        % Throw error if user specified grid points are all invalid
        error('No valid horizontal grid points were provided. \nSpecify new coordinates in ''my_ocean_gridpoints.txt''.',[]);
    else
        % Copy user specified grid points to output directory
        writecell([{'LAT','LON'}; num2cell(lat_lon_coords)],fullfile(outdirpath,'my_ocean_gridpoints_rebinned.txt'),'Delimiter','\t');
    end
else
    load('../data/input/all_ocean_gridpoints.mat','lat_lon_coords');
end

% Copy grid description file to output directory
gridfilepath = fullfile(outdirpath,'grid_descrip_file.mat');
save(gridfilepath,'model_grid');

% Unpack select variables for convenience
nlat = model_grid.horizontal.nlat;
nlon = model_grid.horizontal.nlon;
nzt = model_grid.vertical.nzt;
nzw = model_grid.vertical.nzw;
horiz_grid = model_grid.horizontal;
vert_grid = model_grid.vertical;

% Initialize 2-D arrays of shape (lat, lon), filled with NaNs,
% to store model output data
output_nd.POCexport_2d = NaN(nlat,nlon);
output_nd.sigma_lg_2d = NaN(nlat,nlon);
% Initialize 3-D arrays of shape (z, lat, lon), filled with NaNs,
% to store model output data
output_nd.POCsm_3d_t = NaN(nzt,nlat,nlon);
output_nd.POClg_3d_t = NaN(nzt,nlat,nlon);
output_nd.CaCO3calcsm_3d_t = NaN(nzt,nlat,nlon);
output_nd.CaCO3calclg_3d_t = NaN(nzt,nlat,nlon);
output_nd.CaCO3aragsm_3d_t = NaN(nzt,nlat,nlon);
output_nd.CaCO3araglg_3d_t = NaN(nzt,nlat,nlon);
output_nd.SiO2sm_3d_t = NaN(nzt,nlat,nlon);
output_nd.SiO2lg_3d_t = NaN(nzt,nlat,nlon);
output_nd.rho_sm_3d_w = NaN(nzw,nlat,nlon);
output_nd.rho_lg_3d_w = NaN(nzw,nlat,nlon);
output_nd.w_sm_3d_w = NaN(nzw,nlat,nlon);
output_nd.w_lg_3d_w = NaN(nzw,nlat,nlon);
output_nd.kremin_3d_t = NaN(nzt,nlat,nlon);
output_nd.Rremin_3d_t = NaN(nzt,nlat,nlon);
output_nd.Rfrag_3d_t = NaN(nzt,nlat,nlon);
output_nd.flxPOCsm_3d_w = NaN(nzw,nlat,nlon);
output_nd.flxPOClg_3d_w = NaN(nzw,nlat,nlon);
output_nd.flxCaCO3calcsm_3d_w = NaN(nzw,nlat,nlon);
output_nd.flxCaCO3calclg_3d_w = NaN(nzw,nlat,nlon);
output_nd.flxCaCO3aragsm_3d_w = NaN(nzw,nlat,nlon);
output_nd.flxCaCO3araglg_3d_w = NaN(nzw,nlat,nlon);
output_nd.flxSiO2sm_3d_w = NaN(nzw,nlat,nlon);
output_nd.flxSiO2lg_3d_w = NaN(nzw,nlat,nlon);

% Loop over specified horizontal grid points
for idx_coord = 1:size(lat_lon_coords,1)
    lat_lon = lat_lon_coords(idx_coord,:);
    % Set up 1-D water column model at horizontal grid point
    water_col_model = set_up_1d_model(lat_lon, model_grid, ocean_data, config);
    % Skip model run if (a) the horizontal grid point is located on land or
    % (b) there is incomplete surface forcing data and/or ocean state data
    if water_col_model.vert_grid.k_max == 0
        continue
    end
    % Run MSPACMAM in 1-D water column at horizontal grid point
    output_1d = run_1d_model(water_col_model, config, constants);
    % Insert model output data into multidimensional arrays
    output_nd.POCexport_2d(horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        water_col_model.water_col_vars.epPOC;
    output_nd.sigma_lg_2d(horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        water_col_model.water_col_vars.sigma_poc;
    output_nd.POCsm_3d_t(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.prog_vars_1d.POCsm;
    output_nd.POClg_3d_t(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.prog_vars_1d.POClg;
    output_nd.CaCO3calcsm_3d_t(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.prog_vars_1d.CaCO3calcsm;
    output_nd.CaCO3calclg_3d_t(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.prog_vars_1d.CaCO3calclg;
    output_nd.CaCO3aragsm_3d_t(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.prog_vars_1d.CaCO3aragsm;
    output_nd.CaCO3araglg_3d_t(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.prog_vars_1d.CaCO3araglg;
    output_nd.SiO2sm_3d_t(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.prog_vars_1d.SiO2sm;
    output_nd.SiO2lg_3d_t(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.prog_vars_1d.SiO2lg;
    output_nd.rho_sm_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.diag_vars_1d.rho_sm;
    output_nd.rho_lg_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.diag_vars_1d.rho_lg;
    output_nd.w_sm_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.diag_vars_1d.w_sm;
    output_nd.w_lg_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.diag_vars_1d.w_lg;
    output_nd.kremin_3d_t(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.diag_vars_1d.kremin;
    output_nd.Rremin_3d_t(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.diag_vars_1d.Rremin;
    output_nd.Rfrag_3d_t(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        output_1d.diag_vars_1d.Rfrag;
    % Diagnose sinking particle fluxes from tracer concentrations and w-velocities
    % and insert vertical flux profiles into 3-D arrays
    output_nd.flxPOCsm_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        diag_fluxes(model_grid, water_col_model, output_1d.prog_vars_1d.POCsm, output_1d.diag_vars_1d.w_sm);
    output_nd.flxPOClg_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        diag_fluxes(model_grid, water_col_model, output_1d.prog_vars_1d.POClg, output_1d.diag_vars_1d.w_lg);
    output_nd.flxCaCO3calcsm_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        diag_fluxes(model_grid, water_col_model, output_1d.prog_vars_1d.CaCO3calcsm, output_1d.diag_vars_1d.w_sm);
    output_nd.flxCaCO3calclg_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        diag_fluxes(model_grid, water_col_model, output_1d.prog_vars_1d.CaCO3calclg, output_1d.diag_vars_1d.w_lg);
    output_nd.flxCaCO3aragsm_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        diag_fluxes(model_grid, water_col_model, output_1d.prog_vars_1d.CaCO3aragsm, output_1d.diag_vars_1d.w_sm);
    output_nd.flxCaCO3araglg_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        diag_fluxes(model_grid, water_col_model, output_1d.prog_vars_1d.CaCO3araglg, output_1d.diag_vars_1d.w_lg);
    output_nd.flxSiO2sm_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        diag_fluxes(model_grid, water_col_model, output_1d.prog_vars_1d.SiO2sm, output_1d.diag_vars_1d.w_sm);
    output_nd.flxSiO2lg_3d_w(:,horiz_grid.lat==lat_lon(1),horiz_grid.lon==lat_lon(2)) = ...
        diag_fluxes(model_grid, water_col_model, output_1d.prog_vars_1d.SiO2lg, output_1d.diag_vars_1d.w_lg);
    % Write multidimensional arrays to temporary output MAT-file
    save(tempoutfile_path,'output_nd');
end
% Calculate mesopelagic POC transfer efficiency (i.e., Teff at 1000 m)
output_nd.Teff_2d = squeeze(output_nd.flxPOCsm_3d_w(vert_grid.zw==1000,:,:) + ...
    output_nd.flxPOClg_3d_w(vert_grid.zw==1000,:,:))./output_nd.POCexport_2d;
% Set any Teff values that are >1 to NaN
output_nd.Teff_2d(output_nd.Teff_2d>1) = NaN;
% Write 3-D array to temporary output MAT-file
save(tempoutfile_path,'output_nd');

% Rewrite model output data to netCDF output file
clear('output_nd'); load(tempoutfile_path,'output_nd');
write_to_netcdf(outfile_path,'lat',{'lat',nlat},...
    'Latitude coordinates (DD)',horiz_grid.lat);
write_to_netcdf(outfile_path,'lon',{'lon',nlon},...
    'Longitude coordinates (DD)',horiz_grid.lon);
write_to_netcdf(outfile_path,'zt',{'zt',nzt},...
    'Depth coordinates of vertical grid cell centers (m)',vert_grid.zt);
write_to_netcdf(outfile_path,'zw',{'zw',nzw},...
    'Depth coordinates of vertical grid cell edges (m)',vert_grid.zw);
write_to_netcdf(outfile_path,'POCe',{'lat',nlat,'lon',nlon},...
    'POC export flux at 100 m (mol C/m^2/d)',output_nd.POCexport_2d*constants.secInDay); % mol/m^2/s -> mol/m^2/d
write_to_netcdf(outfile_path,'sigma_L',{'lat',nlat,'lon',nlon},...
    'Fraction of POC export routed to large size class (unitless)',output_nd.sigma_lg_2d);
write_to_netcdf(outfile_path,'POC_S',{'zt',nzt,'lat',nlat,'lon',nlon},...
    'POC concentration in small size class (mol C/m^3)',output_nd.POCsm_3d_t);
write_to_netcdf(outfile_path,'POC_L',{'zt',nzt,'lat',nlat,'lon',nlon},...
    'POC concentration in large size class (mol C/m^3)',output_nd.POClg_3d_t);
write_to_netcdf(outfile_path,'calc_S',{'zt',nzt,'lat',nlat,'lon',nlon},...
    'Calcite concentration in small size class (mol C/m^3)',output_nd.CaCO3calcsm_3d_t);
write_to_netcdf(outfile_path,'calc_L',{'zt',nzt,'lat',nlat,'lon',nlon},...
    'Calcite concentration in large size class (mol C/m^3)',output_nd.CaCO3calclg_3d_t);
write_to_netcdf(outfile_path,'arag_S',{'zt',nzt,'lat',nlat,'lon',nlon},...
    'Aragonite concentration in small size class (mol C/m^3)',output_nd.CaCO3aragsm_3d_t);
write_to_netcdf(outfile_path,'arag_L',{'zt',nzt,'lat',nlat,'lon',nlon},...
    'Aragonite concentration in large size class (mol C/m^3)',output_nd.CaCO3araglg_3d_t);
write_to_netcdf(outfile_path,'SiO2_S',{'zt',nzt,'lat',nlat,'lon',nlon},...
    'Opal concentration in small size class (mol Si/m^3)',output_nd.SiO2sm_3d_t);
write_to_netcdf(outfile_path,'SiO2_L',{'zt',nzt,'lat',nlat,'lon',nlon},...
    'Opal concentration in large size class (mol Si/m^3)',output_nd.SiO2lg_3d_t);
write_to_netcdf(outfile_path,'rho_S',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Bulk density of small particle (g/cm^3)',output_nd.rho_sm_3d_w);
write_to_netcdf(outfile_path,'rho_L',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Bulk density of large particle (g/cm^3)',output_nd.rho_lg_3d_w);
write_to_netcdf(outfile_path,'w_sink_S',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Settling velocity of small particle (m/d)',output_nd.w_sm_3d_w*constants.secInDay); % m/s -> m/d
write_to_netcdf(outfile_path,'w_sink_L',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Settling velocity of large particle (m/d)',output_nd.w_lg_3d_w*constants.secInDay); % m/s -> m/d
write_to_netcdf(outfile_path,'kPOC_prime',{'zt',nzt,'lat',nlat,'lon',nlon},...
    'POC remineralization rate constant (1/d)',output_nd.kremin_3d_t*constants.secInDay); % 1/s -> 1/d
write_to_netcdf(outfile_path,'Rremin',{'zt',nzt,'lat',nlat,'lon',nlon},...
    'Total POC remineralization rate (mol C/m^3/d)',output_nd.Rremin_3d_t*constants.secInDay); % mol/m^3/s -> mol/m^3/d
write_to_netcdf(outfile_path,'Rfrag',{'zt',nzt,'lat',nlat,'lon',nlon},...
    'Large particle POC fragmentation rate (mol C/m^3/d)',output_nd.Rfrag_3d_t*constants.secInDay); % mol/m^3/s -> mol/m^3/d
write_to_netcdf(outfile_path,'F_POC_S',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Sinking small particle POC flux (mol C/m^2/d)',output_nd.flxPOCsm_3d_w*constants.secInDay); % mol/m^2/s -> mol/m^2/d
write_to_netcdf(outfile_path,'F_POC_L',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Sinking large particle POC flux (mol C/m^2/d)',output_nd.flxPOClg_3d_w*constants.secInDay); % mol/m^2/s -> mol/m^2/d
write_to_netcdf(outfile_path,'F_calc_S',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Sinking small particle calcite flux (mol C/m^2/d)',output_nd.flxCaCO3calcsm_3d_w*constants.secInDay); % mol/m^2/s -> mol/m^2/d
write_to_netcdf(outfile_path,'F_calc_L',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Sinking large particle calcite flux (mol C/m^2/d)',output_nd.flxCaCO3calclg_3d_w*constants.secInDay); % mol/m^2/s -> mol/m^2/d
write_to_netcdf(outfile_path,'F_arag_S',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Sinking small particle aragonite flux (mol C/m^2/d)',output_nd.flxCaCO3aragsm_3d_w*constants.secInDay); % mol/m^2/s -> mol/m^2/d
write_to_netcdf(outfile_path,'F_arag_L',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Sinking large particle aragonite flux (mol C/m^2/d)',output_nd.flxCaCO3araglg_3d_w*constants.secInDay); % mol/m^2/s -> mol/m^2/d
write_to_netcdf(outfile_path,'F_SiO2_S',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Sinking small particle opal flux (mol Si/m^2/d)',output_nd.flxSiO2sm_3d_w*constants.secInDay); % mol/m^2/s -> mol/m^2/d
write_to_netcdf(outfile_path,'F_SiO2_L',{'zw',nzw,'lat',nlat,'lon',nlon},...
    'Sinking large particle opal flux (mol Si/m^2/d)',output_nd.flxSiO2lg_3d_w*constants.secInDay); % mol/m^2/s -> mol/m^2/d
write_to_netcdf(outfile_path,'Teff',{'lat',nlat,'lon',nlon},...
    'POC transfer efficiency at 1000 m (%)',output_nd.Teff_2d*100); % fraction -> percent

% Remove temporary output MAT-file
delete(tempoutfile_path);